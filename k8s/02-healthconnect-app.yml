---
apiVersion: v1
kind: ConfigMap
metadata:
  name: healthconnect-config
  namespace: healthconnect
  labels:
    app: healthconnect-app
    component: application
data:
  NODE_ENV: "production"
  PORT: "3000"
  MONGODB_PORT: "27017"
  APP_NAME: "HealthConnect+"
  APP_VERSION: "1.0.0"
  LOG_LEVEL: "info"
  # Add other non-sensitive configuration here

---
apiVersion: v1
kind: Secret
metadata:
  name: healthconnect-secret
  namespace: healthconnect
  labels:
    app: healthconnect-app
    component: application
type: Opaque
data:
  # MongoDB connection string (base64 encoded)
  # mongodb://mongodb-service:27017/healthconnect
  MONGODB_URI: bW9uZ29kYjovL21vbmdvZGItc2VydmljZToyNzAxNy9oZWFsdGhjb25uZWN0
  # JWT Secret (base64 encoded) - Change in production!
  JWT_SECRET: aGVhbHRoY29ubmVjdC1qd3Qtc2VjcmV0LWtleS0yMDI1
  # Session Secret (base64 encoded) - Change in production!
  SESSION_SECRET: aGVhbHRoY29ubmVjdC1zZXNzaW9uLXNlY3JldC0yMDI1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthconnect-app
  namespace: healthconnect
  labels:
    app: healthconnect-app
    component: application
    tier: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: healthconnect-app
      component: application
  template:
    metadata:
      labels:
        app: healthconnect-app
        component: application
        tier: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: healthconnect-app
        image: yourusername/healthconnect-app:latest  # This will be updated by Jenkins
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http-port
          protocol: TCP
        env:
        # Environment variables from ConfigMap
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: healthconnect-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: healthconnect-config
              key: PORT
        - name: MONGODB_PORT
          valueFrom:
            configMapKeyRef:
              name: healthconnect-config
              key: MONGODB_PORT
        - name: APP_NAME
          valueFrom:
            configMapKeyRef:
              name: healthconnect-config
              key: APP_NAME
        - name: APP_VERSION
          valueFrom:
            configMapKeyRef:
              name: healthconnect-config
              key: APP_VERSION
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: healthconnect-config
              key: LOG_LEVEL
        # Secret environment variables
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: healthconnect-secret
              key: MONGODB_URI
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: healthconnect-secret
              key: JWT_SECRET
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: healthconnect-secret
              key: SESSION_SECRET
        # Pod metadata
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: uploads-volume
          mountPath: /app/public/uploads
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: uploads-volume
        emptyDir:
          sizeLimit: 1Gi
      restartPolicy: Always
      serviceAccountName: healthconnect-service-account
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - healthconnect-app
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "app"
        operator: "Equal"
        value: "healthconnect"
        effect: "NoSchedule"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: healthconnect-service-account
  namespace: healthconnect
  labels:
    app: healthconnect-app
    component: application
automountServiceAccountToken: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthconnect-app-worker
  namespace: healthconnect
  labels:
    app: healthconnect-app-worker
    component: worker
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: healthconnect-app-worker
      component: worker
  template:
    metadata:
      labels:
        app: healthconnect-app-worker
        component: worker
        tier: backend
    spec:
      containers:
      - name: healthconnect-worker
        image: yourusername/healthconnect-app:latest  # This will be updated by Jenkins
        imagePullPolicy: Always
        command: ["node"]
        args: ["worker.js"]  # If you have background job processing
        envFrom:
        - configMapRef:
            name: healthconnect-config
        - secretRef:
            name: healthconnect-secret
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
      restartPolicy: Always
      serviceAccountName: healthconnect-service-account
