---
apiVersion: v1
kind: Service
metadata:
  name: healthconnect-app-service
  namespace: healthconnect
  labels:
    app: healthconnect-app
    component: application
    tier: frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "3"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-access-log-enabled: "true"
    # Add SSL certificate ARN for HTTPS (uncomment and update)
    # service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:ACCOUNT:certificate/CERT_ID"
    # service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
spec:
  type: LoadBalancer
  selector:
    app: healthconnect-app
    component: application
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  # Uncomment for HTTPS support
  # - name: https
  #   port: 443
  #   targetPort: 3000
  #   protocol: TCP
  sessionAffinity: None
  externalTrafficPolicy: Cluster

---
apiVersion: v1
kind: Service
metadata:
  name: healthconnect-app-internal-service
  namespace: healthconnect
  labels:
    app: healthconnect-app
    component: application
    tier: frontend
spec:
  type: ClusterIP
  selector:
    app: healthconnect-app
    component: application
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  sessionAffinity: None

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: healthconnect-app-ingress
  namespace: healthconnect
  labels:
    app: healthconnect-app
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    alb.ingress.kubernetes.io/load-balancer-name: healthconnect-alb
    alb.ingress.kubernetes.io/group.name: healthconnect
    alb.ingress.kubernetes.io/group.order: '100'
    # SSL/TLS Configuration (uncomment and update for production)
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:ACCOUNT:certificate/CERT_ID
    # alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    # alb.ingress.kubernetes.io/actions.ssl-redirect: |
    #   {
    #     "Type": "redirect",
    #     "RedirectConfig": {
    #       "Protocol": "HTTPS",
    #       "Port": "443",
    #       "StatusCode": "HTTP_301"
    #     }
    #   }
spec:
  rules:
  - host: healthconnect.yourdomain.com  # Update with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: healthconnect-app-internal-service
            port:
              number: 80
  # Default backend for requests without a matching host
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: healthconnect-app-internal-service
            port:
              number: 80
  # TLS configuration (uncomment for HTTPS)
  # tls:
  # - hosts:
  #   - healthconnect.yourdomain.com
  #   secretName: healthconnect-tls-secret

---
apiVersion: v1
kind: Service
metadata:
  name: healthconnect-app-nodeport
  namespace: healthconnect
  labels:
    app: healthconnect-app
    component: application
    service-type: nodeport
spec:
  type: NodePort
  selector:
    app: healthconnect-app
    component: application
  ports:
  - name: http
    port: 80
    targetPort: 3000
    nodePort: 30017  # External port for NodePort access
    protocol: TCP
  sessionAffinity: None

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: healthconnect-network-policy
  namespace: healthconnect
  labels:
    app: healthconnect-app
spec:
  podSelector:
    matchLabels:
      app: healthconnect-app
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - podSelector:
        matchLabels:
          app: healthconnect-app
  - from: []  # Allow external traffic via load balancer
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: mongodb
    ports:
    - protocol: TCP
      port: 27017
  - to: []  # Allow external traffic (for API calls, etc.)
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
    - protocol: UDP
      port: 53  # DNS
    - protocol: TCP
      port: 53  # DNS

---
# Headless service for internal service discovery
apiVersion: v1
kind: Service
metadata:
  name: healthconnect-app-headless
  namespace: healthconnect
  labels:
    app: healthconnect-app
    component: application
    service-type: headless
spec:
  clusterIP: None  # Makes this a headless service
  selector:
    app: healthconnect-app
    component: application
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
